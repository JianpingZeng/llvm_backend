
prog4:     file format elf64-x86-64


Disassembly of section .text:

00000000004000f0 <_start>:
  4000f0:	48 31 ed             	xor    %rbp,%rbp
  4000f3:	49 89 d1             	mov    %rdx,%r9
  4000f6:	5e                   	pop    %rsi
  4000f7:	48 89 e2             	mov    %rsp,%rdx
  4000fa:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4000fe:	48 c7 c7 a0 06 40 00 	mov    $0x4006a0,%rdi
  400105:	e8 56 04 00 00       	callq  400560 <__libc_start_main>
  40010a:	eb fe                	jmp    40010a <_start+0x1a>
  40010c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400110 <llexit>:
  400110:	48 b8 3c 00 00 00 00 	movabs $0x3c,%rax
  400117:	00 00 00 
  40011a:	0f 05                	syscall 
  40011c:	c3                   	retq   
  40011d:	0f 1f 00             	nopl   (%rax)

0000000000400120 <llstrlen>:
  400120:	48 89 f9             	mov    %rdi,%rcx
  400123:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
  400127:	48 83 e7 07          	and    $0x7,%rdi
  40012b:	48 89 f8             	mov    %rdi,%rax
  40012e:	48 f7 d8             	neg    %rax
  400131:	48 83 ff 06          	cmp    $0x6,%rdi
  400135:	77 0c                	ja     400143 <llstrlen+0x23>
  400137:	ff 24 fd e8 06 40 00 	jmpq   *0x4006e8(,%rdi,8)
  40013e:	48 8b 11             	mov    (%rcx),%rdx
  400141:	eb 35                	jmp    400178 <llstrlen+0x58>
  400143:	48 8b 11             	mov    (%rcx),%rdx
  400146:	e9 98 00 00 00       	jmpq   4001e3 <llstrlen+0xc3>
  40014b:	48 8b 11             	mov    (%rcx),%rdx
  40014e:	eb 35                	jmp    400185 <llstrlen+0x65>
  400150:	48 8b 11             	mov    (%rcx),%rdx
  400153:	eb 3e                	jmp    400193 <llstrlen+0x73>
  400155:	48 8b 11             	mov    (%rcx),%rdx
  400158:	eb 4d                	jmp    4001a7 <llstrlen+0x87>
  40015a:	48 8b 11             	mov    (%rcx),%rdx
  40015d:	eb 5c                	jmp    4001bb <llstrlen+0x9b>
  40015f:	48 8b 11             	mov    (%rcx),%rdx
  400162:	eb 6b                	jmp    4001cf <llstrlen+0xaf>
  400164:	48 83 c1 08          	add    $0x8,%rcx
  400168:	48 83 c0 08          	add    $0x8,%rax
  40016c:	48 8b 11             	mov    (%rcx),%rdx
  40016f:	48 f7 c2 ff 00 00 00 	test   $0xff,%rdx
  400176:	74 7c                	je     4001f4 <llstrlen+0xd4>
  400178:	48 f7 c2 00 ff 00 00 	test   $0xff00,%rdx
  40017f:	75 04                	jne    400185 <llstrlen+0x65>
  400181:	48 ff c0             	inc    %rax
  400184:	c3                   	retq   
  400185:	48 f7 c2 00 00 ff 00 	test   $0xff0000,%rdx
  40018c:	75 05                	jne    400193 <llstrlen+0x73>
  40018e:	48 83 c0 02          	add    $0x2,%rax
  400192:	c3                   	retq   
  400193:	48 be 00 00 00 ff 00 	movabs $0xff000000,%rsi
  40019a:	00 00 00 
  40019d:	48 85 f2             	test   %rsi,%rdx
  4001a0:	75 05                	jne    4001a7 <llstrlen+0x87>
  4001a2:	48 83 c0 03          	add    $0x3,%rax
  4001a6:	c3                   	retq   
  4001a7:	48 be 00 00 00 00 ff 	movabs $0xff00000000,%rsi
  4001ae:	00 00 00 
  4001b1:	48 85 f2             	test   %rsi,%rdx
  4001b4:	75 05                	jne    4001bb <llstrlen+0x9b>
  4001b6:	48 83 c0 04          	add    $0x4,%rax
  4001ba:	c3                   	retq   
  4001bb:	48 be 00 00 00 00 00 	movabs $0xff0000000000,%rsi
  4001c2:	ff 00 00 
  4001c5:	48 85 f2             	test   %rsi,%rdx
  4001c8:	75 05                	jne    4001cf <llstrlen+0xaf>
  4001ca:	48 83 c0 05          	add    $0x5,%rax
  4001ce:	c3                   	retq   
  4001cf:	48 be 00 00 00 00 00 	movabs $0xff000000000000,%rsi
  4001d6:	00 ff 00 
  4001d9:	48 85 f2             	test   %rsi,%rdx
  4001dc:	75 05                	jne    4001e3 <llstrlen+0xc3>
  4001de:	48 83 c0 06          	add    $0x6,%rax
  4001e2:	c3                   	retq   
  4001e3:	48 c1 ea 38          	shr    $0x38,%rdx
  4001e7:	48 85 d2             	test   %rdx,%rdx
  4001ea:	0f 85 74 ff ff ff    	jne    400164 <llstrlen+0x44>
  4001f0:	48 83 c0 07          	add    $0x7,%rax
  4001f4:	c3                   	retq   
  4001f5:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  4001fc:	00 00 00 00 

0000000000400200 <puts>:
  400200:	53                   	push   %rbx
  400201:	48 89 fb             	mov    %rdi,%rbx
  400204:	e8 17 ff ff ff       	callq  400120 <llstrlen>
  400209:	48 89 c1             	mov    %rax,%rcx
  40020c:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  400213:	00 00 00 
  400216:	48 bf 01 00 00 00 00 	movabs $0x1,%rdi
  40021d:	00 00 00 
  400220:	48 89 de             	mov    %rbx,%rsi
  400223:	48 89 ca             	mov    %rcx,%rdx
  400226:	0f 05                	syscall 
  400228:	5b                   	pop    %rbx
  400229:	c3                   	retq   
  40022a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400230 <putchar>:
  400230:	48 89 7c 24 f8       	mov    %rdi,-0x8(%rsp)
  400235:	48 8d 74 24 f8       	lea    -0x8(%rsp),%rsi
  40023a:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  400241:	00 00 00 
  400244:	48 bf 01 00 00 00 00 	movabs $0x1,%rdi
  40024b:	00 00 00 
  40024e:	48 ba 01 00 00 00 00 	movabs $0x1,%rdx
  400255:	00 00 00 
  400258:	0f 05                	syscall 
  40025a:	c3                   	retq   
  40025b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400260 <malloc>:
  400260:	48 89 fa             	mov    %rdi,%rdx
  400263:	48 83 c2 07          	add    $0x7,%rdx
  400267:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
  40026b:	48 8b 3d 8e 0d 20 00 	mov    0x200d8e(%rip),%rdi        # 601000 <__bss_start>
  400272:	48 01 d7             	add    %rdx,%rdi
  400275:	48 89 3d 84 0d 20 00 	mov    %rdi,0x200d84(%rip)        # 601000 <__bss_start>
  40027c:	48 b8 0c 00 00 00 00 	movabs $0xc,%rax
  400283:	00 00 00 
  400286:	0f 05                	syscall 
  400288:	48 8b 05 71 0d 20 00 	mov    0x200d71(%rip),%rax        # 601000 <__bss_start>
  40028f:	48 29 d0             	sub    %rdx,%rax
  400292:	c3                   	retq   
  400293:	66 66 66 66 2e 0f 1f 	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40029a:	84 00 00 00 00 00 

00000000004002a0 <isspace>:
  4002a0:	48 b8 01 00 00 00 00 	movabs $0x1,%rax
  4002a7:	00 00 00 
  4002aa:	48 83 ff 20          	cmp    $0x20,%rdi
  4002ae:	74 0a                	je     4002ba <isspace+0x1a>
  4002b0:	48 83 c7 f7          	add    $0xfffffffffffffff7,%rdi
  4002b4:	48 83 ff 05          	cmp    $0x5,%rdi
  4002b8:	9c                   	pushfq 
  4002b9:	58                   	pop    %rax
  4002ba:	48 83 e0 01          	and    $0x1,%rax
  4002be:	c3                   	retq   
  4002bf:	90                   	nop

00000000004002c0 <isdigit>:
  4002c0:	48 83 c7 d0          	add    $0xffffffffffffffd0,%rdi
  4002c4:	48 83 ff 0a          	cmp    $0xa,%rdi
  4002c8:	9c                   	pushfq 
  4002c9:	58                   	pop    %rax
  4002ca:	c3                   	retq   
  4002cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004002d0 <LLreadchar>:
  4002d0:	48 89 f8             	mov    %rdi,%rax
  4002d3:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
  4002d7:	48 8b 00             	mov    (%rax),%rax
  4002da:	48 83 e7 07          	and    $0x7,%rdi
  4002de:	48 ff cf             	dec    %rdi
  4002e1:	48 83 ff 06          	cmp    $0x6,%rdi
  4002e5:	77 4d                	ja     400334 <LLreadchar+0x64>
  4002e7:	ff 24 fd 20 07 40 00 	jmpq   *0x400720(,%rdi,8)
  4002ee:	48 c1 e8 08          	shr    $0x8,%rax
  4002f2:	48 25 ff 00 00 00    	and    $0xff,%rax
  4002f8:	c3                   	retq   
  4002f9:	48 c1 e8 10          	shr    $0x10,%rax
  4002fd:	48 25 ff 00 00 00    	and    $0xff,%rax
  400303:	c3                   	retq   
  400304:	48 c1 e8 18          	shr    $0x18,%rax
  400308:	48 25 ff 00 00 00    	and    $0xff,%rax
  40030e:	c3                   	retq   
  40030f:	48 c1 e8 20          	shr    $0x20,%rax
  400313:	48 25 ff 00 00 00    	and    $0xff,%rax
  400319:	c3                   	retq   
  40031a:	48 c1 e8 28          	shr    $0x28,%rax
  40031e:	48 25 ff 00 00 00    	and    $0xff,%rax
  400324:	c3                   	retq   
  400325:	48 c1 e8 30          	shr    $0x30,%rax
  400329:	48 25 ff 00 00 00    	and    $0xff,%rax
  40032f:	c3                   	retq   
  400330:	48 c1 e8 38          	shr    $0x38,%rax
  400334:	48 25 ff 00 00 00    	and    $0xff,%rax
  40033a:	c3                   	retq   
  40033b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400340 <atol>:
  400340:	48 89 f8             	mov    %rdi,%rax
  400343:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
  400347:	48 8b 10             	mov    (%rax),%rdx
  40034a:	48 89 f8             	mov    %rdi,%rax
  40034d:	48 83 e0 07          	and    $0x7,%rax
  400351:	48 ff c8             	dec    %rax
  400354:	48 83 f8 06          	cmp    $0x6,%rax
  400358:	48 89 d1             	mov    %rdx,%rcx
  40035b:	77 53                	ja     4003b0 <atol+0x70>
  40035d:	ff 24 c5 58 07 40 00 	jmpq   *0x400758(,%rax,8)
  400364:	48 89 d1             	mov    %rdx,%rcx
  400367:	48 c1 e9 08          	shr    $0x8,%rcx
  40036b:	eb 43                	jmp    4003b0 <atol+0x70>
  40036d:	48 89 d1             	mov    %rdx,%rcx
  400370:	48 c1 e9 10          	shr    $0x10,%rcx
  400374:	eb 3a                	jmp    4003b0 <atol+0x70>
  400376:	48 89 d1             	mov    %rdx,%rcx
  400379:	48 c1 e9 18          	shr    $0x18,%rcx
  40037d:	eb 31                	jmp    4003b0 <atol+0x70>
  40037f:	48 89 d1             	mov    %rdx,%rcx
  400382:	48 c1 e9 20          	shr    $0x20,%rcx
  400386:	eb 28                	jmp    4003b0 <atol+0x70>
  400388:	48 89 d1             	mov    %rdx,%rcx
  40038b:	48 c1 e9 28          	shr    $0x28,%rcx
  40038f:	eb 1f                	jmp    4003b0 <atol+0x70>
  400391:	48 89 d1             	mov    %rdx,%rcx
  400394:	48 c1 e9 30          	shr    $0x30,%rcx
  400398:	eb 16                	jmp    4003b0 <atol+0x70>
  40039a:	48 89 d1             	mov    %rdx,%rcx
  40039d:	48 c1 e9 38          	shr    $0x38,%rcx
  4003a1:	66 66 66 66 66 66 2e 	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  4003a8:	0f 1f 84 00 00 00 00 
  4003af:	00 
  4003b0:	48 ff c7             	inc    %rdi
  4003b3:	48 81 e1 ff 00 00 00 	and    $0xff,%rcx
  4003ba:	48 83 f9 20          	cmp    $0x20,%rcx
  4003be:	48 8d 49 f7          	lea    -0x9(%rcx),%rcx
  4003c2:	0f 84 78 ff ff ff    	je     400340 <atol>
  4003c8:	48 83 f9 05          	cmp    $0x5,%rcx
  4003cc:	0f 82 6e ff ff ff    	jb     400340 <atol>
  4003d2:	48 83 f8 06          	cmp    $0x6,%rax
  4003d6:	77 2f                	ja     400407 <atol+0xc7>
  4003d8:	ff 24 c5 90 07 40 00 	jmpq   *0x400790(,%rax,8)
  4003df:	48 c1 ea 08          	shr    $0x8,%rdx
  4003e3:	eb 22                	jmp    400407 <atol+0xc7>
  4003e5:	48 c1 ea 10          	shr    $0x10,%rdx
  4003e9:	eb 1c                	jmp    400407 <atol+0xc7>
  4003eb:	48 c1 ea 18          	shr    $0x18,%rdx
  4003ef:	eb 16                	jmp    400407 <atol+0xc7>
  4003f1:	48 c1 ea 20          	shr    $0x20,%rdx
  4003f5:	eb 10                	jmp    400407 <atol+0xc7>
  4003f7:	48 c1 ea 28          	shr    $0x28,%rdx
  4003fb:	eb 0a                	jmp    400407 <atol+0xc7>
  4003fd:	48 c1 ea 30          	shr    $0x30,%rdx
  400401:	eb 04                	jmp    400407 <atol+0xc7>
  400403:	48 c1 ea 38          	shr    $0x38,%rdx
  400407:	48 81 e2 ff 00 00 00 	and    $0xff,%rdx
  40040e:	4d 31 c0             	xor    %r8,%r8
  400411:	48 83 fa 2b          	cmp    $0x2b,%rdx
  400415:	74 14                	je     40042b <atol+0xeb>
  400417:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
  40041b:	48 83 fa 2d          	cmp    $0x2d,%rdx
  40041f:	75 0d                	jne    40042e <atol+0xee>
  400421:	49 b8 01 00 00 00 00 	movabs $0x1,%r8
  400428:	00 00 00 
  40042b:	48 89 f8             	mov    %rdi,%rax
  40042e:	48 31 d2             	xor    %rdx,%rdx
  400431:	eb 25                	jmp    400458 <atol+0x118>
  400433:	66 66 66 66 2e 0f 1f 	data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40043a:	84 00 00 00 00 00 
  400440:	48 ff c0             	inc    %rax
  400443:	48 d1 e2             	shl    %rdx
  400446:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
  40044a:	48 81 e1 ff 00 00 00 	and    $0xff,%rcx
  400451:	48 83 c2 30          	add    $0x30,%rdx
  400455:	48 29 ca             	sub    %rcx,%rdx
  400458:	48 89 c1             	mov    %rax,%rcx
  40045b:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
  40045f:	48 8b 09             	mov    (%rcx),%rcx
  400462:	48 89 c7             	mov    %rax,%rdi
  400465:	48 83 e7 07          	and    $0x7,%rdi
  400469:	48 ff cf             	dec    %rdi
  40046c:	48 83 ff 06          	cmp    $0x6,%rdi
  400470:	48 89 ce             	mov    %rcx,%rsi
  400473:	77 4b                	ja     4004c0 <atol+0x180>
  400475:	ff 24 fd c8 07 40 00 	jmpq   *0x4007c8(,%rdi,8)
  40047c:	48 89 ce             	mov    %rcx,%rsi
  40047f:	48 c1 ee 08          	shr    $0x8,%rsi
  400483:	eb 3b                	jmp    4004c0 <atol+0x180>
  400485:	48 89 ce             	mov    %rcx,%rsi
  400488:	48 c1 ee 10          	shr    $0x10,%rsi
  40048c:	eb 32                	jmp    4004c0 <atol+0x180>
  40048e:	48 89 ce             	mov    %rcx,%rsi
  400491:	48 c1 ee 18          	shr    $0x18,%rsi
  400495:	eb 29                	jmp    4004c0 <atol+0x180>
  400497:	48 89 ce             	mov    %rcx,%rsi
  40049a:	48 c1 ee 20          	shr    $0x20,%rsi
  40049e:	eb 20                	jmp    4004c0 <atol+0x180>
  4004a0:	48 89 ce             	mov    %rcx,%rsi
  4004a3:	48 c1 ee 28          	shr    $0x28,%rsi
  4004a7:	eb 17                	jmp    4004c0 <atol+0x180>
  4004a9:	48 89 ce             	mov    %rcx,%rsi
  4004ac:	48 c1 ee 30          	shr    $0x30,%rsi
  4004b0:	eb 0e                	jmp    4004c0 <atol+0x180>
  4004b2:	48 89 ce             	mov    %rcx,%rsi
  4004b5:	48 c1 ee 38          	shr    $0x38,%rsi
  4004b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4004c0:	48 81 e6 ff 00 00 00 	and    $0xff,%rsi
  4004c7:	48 83 c6 d0          	add    $0xffffffffffffffd0,%rsi
  4004cb:	48 83 fe 09          	cmp    $0x9,%rsi
  4004cf:	77 50                	ja     400521 <atol+0x1e1>
  4004d1:	48 83 ff 06          	cmp    $0x6,%rdi
  4004d5:	0f 87 65 ff ff ff    	ja     400440 <atol+0x100>
  4004db:	ff 24 fd 00 08 40 00 	jmpq   *0x400800(,%rdi,8)
  4004e2:	48 c1 e9 08          	shr    $0x8,%rcx
  4004e6:	e9 55 ff ff ff       	jmpq   400440 <atol+0x100>
  4004eb:	48 c1 e9 10          	shr    $0x10,%rcx
  4004ef:	e9 4c ff ff ff       	jmpq   400440 <atol+0x100>
  4004f4:	48 c1 e9 18          	shr    $0x18,%rcx
  4004f8:	e9 43 ff ff ff       	jmpq   400440 <atol+0x100>
  4004fd:	48 c1 e9 20          	shr    $0x20,%rcx
  400501:	e9 3a ff ff ff       	jmpq   400440 <atol+0x100>
  400506:	48 c1 e9 28          	shr    $0x28,%rcx
  40050a:	e9 31 ff ff ff       	jmpq   400440 <atol+0x100>
  40050f:	48 c1 e9 30          	shr    $0x30,%rcx
  400513:	e9 28 ff ff ff       	jmpq   400440 <atol+0x100>
  400518:	48 c1 e9 38          	shr    $0x38,%rcx
  40051c:	e9 1f ff ff ff       	jmpq   400440 <atol+0x100>
  400521:	48 89 d0             	mov    %rdx,%rax
  400524:	48 f7 d8             	neg    %rax
  400527:	4d 85 c0             	test   %r8,%r8
  40052a:	48 0f 45 c2          	cmovne %rdx,%rax
  40052e:	c3                   	retq   
  40052f:	90                   	nop

0000000000400530 <time>:
  400530:	48 89 fa             	mov    %rdi,%rdx
  400533:	48 8d 74 24 f0       	lea    -0x10(%rsp),%rsi
  400538:	48 b8 e4 00 00 00 00 	movabs $0xe4,%rax
  40053f:	00 00 00 
  400542:	48 31 ff             	xor    %rdi,%rdi
  400545:	0f 05                	syscall 
  400547:	48 8b 44 24 f0       	mov    -0x10(%rsp),%rax
  40054c:	48 85 d2             	test   %rdx,%rdx
  40054f:	74 03                	je     400554 <time+0x24>
  400551:	48 89 02             	mov    %rax,(%rdx)
  400554:	c3                   	retq   
  400555:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  40055c:	00 00 00 00 

0000000000400560 <__libc_start_main>:
  400560:	50                   	push   %rax
  400561:	49 89 f8             	mov    %rdi,%r8
  400564:	48 b8 0c 00 00 00 00 	movabs $0xc,%rax
  40056b:	00 00 00 
  40056e:	48 31 ff             	xor    %rdi,%rdi
  400571:	0f 05                	syscall 
  400573:	48 89 05 86 0a 20 00 	mov    %rax,0x200a86(%rip)        # 601000 <__bss_start>
  40057a:	48 89 f7             	mov    %rsi,%rdi
  40057d:	48 89 d6             	mov    %rdx,%rsi
  400580:	48 31 d2             	xor    %rdx,%rdx
  400583:	41 ff d0             	callq  *%r8
  400586:	48 89 c1             	mov    %rax,%rcx
  400589:	48 b8 3c 00 00 00 00 	movabs $0x3c,%rax
  400590:	00 00 00 
  400593:	48 89 cf             	mov    %rcx,%rdi
  400596:	0f 05                	syscall 
  400598:	48 31 c0             	xor    %rax,%rax
  40059b:	5a                   	pop    %rdx
  40059c:	c3                   	retq   
  40059d:	0f 1f 00             	nopl   (%rax)

00000000004005a0 <OutDig>:
  4005a0:	48 83 c7 30          	add    $0x30,%rdi
  4005a4:	e9 87 fc ff ff       	jmpq   400230 <putchar>
  4005a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004005b0 <PrintVal>:
  4005b0:	53                   	push   %rbx
  4005b1:	48 89 fb             	mov    %rdi,%rbx
  4005b4:	48 83 fb 0a          	cmp    $0xa,%rbx
  4005b8:	7c 24                	jl     4005de <PrintVal+0x2e>
  4005ba:	48 b9 67 66 66 66 66 	movabs $0x6666666666666667,%rcx
  4005c1:	66 66 66 
  4005c4:	48 89 d8             	mov    %rbx,%rax
  4005c7:	48 f7 e9             	imul   %rcx
  4005ca:	48 89 d0             	mov    %rdx,%rax
  4005cd:	48 c1 e8 3f          	shr    $0x3f,%rax
  4005d1:	48 c1 fa 02          	sar    $0x2,%rdx
  4005d5:	48 8d 3c 02          	lea    (%rdx,%rax,1),%rdi
  4005d9:	e8 d2 ff ff ff       	callq  4005b0 <PrintVal>
  4005de:	48 b9 67 66 66 66 66 	movabs $0x6666666666666667,%rcx
  4005e5:	66 66 66 
  4005e8:	48 89 d8             	mov    %rbx,%rax
  4005eb:	48 f7 e9             	imul   %rcx
  4005ee:	48 89 d0             	mov    %rdx,%rax
  4005f1:	48 c1 e8 3f          	shr    $0x3f,%rax
  4005f5:	48 c1 fa 02          	sar    $0x2,%rdx
  4005f9:	48 01 c2             	add    %rax,%rdx
  4005fc:	48 d1 e2             	shl    %rdx
  4005ff:	48 8d 04 92          	lea    (%rdx,%rdx,4),%rax
  400603:	48 f7 d8             	neg    %rax
  400606:	48 8d 7c 03 30       	lea    0x30(%rbx,%rax,1),%rdi
  40060b:	5b                   	pop    %rbx
  40060c:	e9 1f fc ff ff       	jmpq   400230 <putchar>
  400611:	66 66 66 66 66 66 2e 	data32 data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  400618:	0f 1f 84 00 00 00 00 
  40061f:	00 

0000000000400620 <PrintShort>:
  400620:	41 56                	push   %r14
  400622:	53                   	push   %rbx
  400623:	50                   	push   %rax
  400624:	49 89 fe             	mov    %rdi,%r14
  400627:	48 b9 67 66 66 66 66 	movabs $0x6666666666666667,%rcx
  40062e:	66 66 66 
  400631:	4c 89 f0             	mov    %r14,%rax
  400634:	48 f7 e9             	imul   %rcx
  400637:	48 89 d3             	mov    %rdx,%rbx
  40063a:	48 89 d8             	mov    %rbx,%rax
  40063d:	48 c1 e8 3f          	shr    $0x3f,%rax
  400641:	48 c1 fb 02          	sar    $0x2,%rbx
  400645:	48 01 c3             	add    %rax,%rbx
  400648:	48 89 d8             	mov    %rbx,%rax
  40064b:	48 f7 e9             	imul   %rcx
  40064e:	48 89 d0             	mov    %rdx,%rax
  400651:	48 c1 e8 3f          	shr    $0x3f,%rax
  400655:	48 c1 fa 02          	sar    $0x2,%rdx
  400659:	48 01 c2             	add    %rax,%rdx
  40065c:	48 d1 e2             	shl    %rdx
  40065f:	48 8d 04 92          	lea    (%rdx,%rdx,4),%rax
  400663:	48 89 d9             	mov    %rbx,%rcx
  400666:	48 29 c1             	sub    %rax,%rcx
  400669:	48 8d 79 30          	lea    0x30(%rcx),%rdi
  40066d:	e8 be fb ff ff       	callq  400230 <putchar>
  400672:	48 d1 e3             	shl    %rbx
  400675:	48 8d 04 9b          	lea    (%rbx,%rbx,4),%rax
  400679:	48 f7 d8             	neg    %rax
  40067c:	49 8d 7c 06 30       	lea    0x30(%r14,%rax,1),%rdi
  400681:	e8 aa fb ff ff       	callq  400230 <putchar>
  400686:	48 bf 0a 00 00 00 00 	movabs $0xa,%rdi
  40068d:	00 00 00 
  400690:	e8 9b fb ff ff       	callq  400230 <putchar>
  400695:	48 83 c4 08          	add    $0x8,%rsp
  400699:	5b                   	pop    %rbx
  40069a:	41 5e                	pop    %r14
  40069c:	c3                   	retq   
  40069d:	0f 1f 00             	nopl   (%rax)

00000000004006a0 <_main>:
  4006a0:	53                   	push   %rbx
  4006a1:	48 83 3d af 0f 20 00 	cmpq   $0x2,0x200faf(%rip)        # 601658 <pi+0x8>
  4006a8:	02 
  4006a9:	9c                   	pushfq 
  4006aa:	5b                   	pop    %rbx
  4006ab:	48 89 1d a6 0f 20 00 	mov    %rbx,0x200fa6(%rip)        # 601658 <pi+0x8>
  4006b2:	48 bf 30 00 00 00 00 	movabs $0x30,%rdi
  4006b9:	00 00 00 
  4006bc:	e8 6f fb ff ff       	callq  400230 <putchar>
  4006c1:	48 83 cb 30          	or     $0x30,%rbx
  4006c5:	48 89 df             	mov    %rbx,%rdi
  4006c8:	e8 63 fb ff ff       	callq  400230 <putchar>
  4006cd:	48 bf 0a 00 00 00 00 	movabs $0xa,%rdi
  4006d4:	00 00 00 
  4006d7:	e8 54 fb ff ff       	callq  400230 <putchar>
  4006dc:	48 31 c0             	xor    %rax,%rax
  4006df:	5b                   	pop    %rbx
  4006e0:	c3                   	retq   
