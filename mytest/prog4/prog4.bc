; ModuleID = 'prog4.c'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@pi = common global [100 x i64] zeroinitializer, align 16
@powers = common global [100 x i64] zeroinitializer, align 16
@term = common global [100 x i64] zeroinitializer, align 16

define void @OutDig(i64 %dig) nounwind uwtable noimplicitfloat {
entry:
  %add = add nsw i64 %dig, 48
  %call = tail call i64 @putchar(i64 %add) nounwind noimplicitfloat
  ret void
}

declare i64 @putchar(i64) nounwind noimplicitfloat

define void @PrintVal(i64 %val) nounwind uwtable noimplicitfloat {
entry:
  %cmp = icmp sgt i64 %val, 9
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %div = sdiv i64 %val, 10
  tail call void @PrintVal(i64 %div) noimplicitfloat
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %rem = srem i64 %val, 10
  %add.i = add nsw i64 %rem, 48
  %call.i = tail call i64 @putchar(i64 %add.i) nounwind noimplicitfloat
  ret void
}

define void @PrintShort(i64 %num) nounwind uwtable noimplicitfloat {
entry:
  %rem = srem i64 %num, 10
  %div = sdiv i64 %num, 10
  %rem.1 = srem i64 %div, 10
  %add.i = add nsw i64 %rem.1, 48
  %call.i = call i64 @putchar(i64 %add.i) nounwind noimplicitfloat
  %add.i.1 = add nsw i64 %rem, 48
  %call.i.1 = call i64 @putchar(i64 %add.i.1) nounwind noimplicitfloat
  %call = call i64 @putchar(i64 10) nounwind noimplicitfloat
  ret void
}

define i64 @_main(i64 %argc, i8** nocapture %argv) nounwind uwtable noimplicitfloat {
entry:
  %0 = load i64* getelementptr inbounds ([100 x i64]* @pi, i64 0, i64 1), align 8, !tbaa !0
  %cmp = icmp slt i64 %0, 2
  %. = zext i1 %cmp to i64
  store i64 %., i64* getelementptr inbounds ([100 x i64]* @pi, i64 0, i64 1), align 8, !tbaa !0
  %call.i.i = tail call i64 @putchar(i64 48) nounwind noimplicitfloat
  %add.i.1.i1 = or i64 %., 48
  %call.i.1.i = tail call i64 @putchar(i64 %add.i.1.i1) nounwind noimplicitfloat
  %call.i = tail call i64 @putchar(i64 10) nounwind noimplicitfloat
  ret i64 0
}

!0 = metadata !{metadata !"long long", metadata !1}
!1 = metadata !{metadata !"omnipotent char", metadata !2}
!2 = metadata !{metadata !"Simple C/C++ TBAA"}
