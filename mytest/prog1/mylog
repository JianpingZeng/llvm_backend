Args: /var/services/homes/spparmar/llvm/built/Debug+Asserts/bin/llc -march=cse523 -O3 hello.c.bc -o hello.c.S -debug 
Subtarget features: SSELevel 0, 3DNowLevel 0, 64bit 1
********** Constant Hoisting **********
********** Function: main
---- Branch Probability Info : main ----

Computing probabilities for entry



=== main
Initial selection DAG: BB#0 'main:entry'
SelectionDAG has 28 nodes:
  0x2111bf0: i64 = Constant<1>

  0x21122f0: i64 = Register %RAX

    0x20eaf10: ch = EntryToken

    0x21122f0: <multiple use>
    0x2111bf0: <multiple use>
  0x21123f0: ch,glue = CopyToReg 0x20eaf10, 0x21122f0, 0x2111bf0 [ORD=2]

  0x21124f0: i32 = TargetConstant<9>

  0x21125f0: i64 = Register %RDI

    0x21123f0: <multiple use>
    0x21125f0: <multiple use>
    0x2111bf0: <multiple use>
    0x21123f0: <multiple use>
  0x21126f0: ch,glue = CopyToReg 0x21123f0, 0x21125f0, 0x2111bf0, 0x21123f0:1 [ORD=2]

  0x21127f0: i64 = Register %RSI

    0x21126f0: <multiple use>
    0x21127f0: <multiple use>
    0x2111cf0: i64 = GlobalAddress<[14 x i8]* @.str> 0 [ORD=2]

    0x21126f0: <multiple use>
  0x21128f0: ch,glue = CopyToReg 0x21126f0, 0x21127f0, 0x2111cf0, 0x21126f0:1 [ORD=2]

  0x21129f0: i64 = Register %vreg0

    0x21128f0: <multiple use>
    0x21129f0: <multiple use>
    0x2111df0: i64 = Constant<13>

    0x21128f0: <multiple use>
  0x21144d0: ch,glue = CopyToReg 0x21128f0, 0x21129f0, 0x2111df0, 0x21128f0:1 [ORD=2]

  0x21146d0: i32 = TargetConstant<12>

    0x21144d0: <multiple use>
    0x2111ef0: i64 = TargetExternalSymbol'syscall'

    0x2111ff0: ch = MDNode<0x20d1d20>

    0x21120f0: i64 = TargetConstant<25>

    0x21121f0: i32 = TargetConstant<10>

    0x21122f0: <multiple use>
    0x21124f0: <multiple use>
    0x21122f0: <multiple use>
    0x21124f0: <multiple use>
    0x21125f0: <multiple use>
    0x21124f0: <multiple use>
    0x21127f0: <multiple use>
    0x21145d0: i32 = TargetConstant<196617>

    0x21129f0: <multiple use>
    0x21146d0: <multiple use>
    0x21147d0: i64 = Register %RCX

    0x21146d0: <multiple use>
    0x21148d0: i64 = Register %R11

    0x21146d0: <multiple use>
    0x21149d0: i64 = Register %EFLAGS

    0x21144d0: <multiple use>
  0x2114ad0: ch,glue = inlineasm 0x21144d0, 0x2111ef0, 0x2111ff0, 0x21120f0, 0x21121f0, 0x21122f0, 0x21124f0, 0x21122f0, 0x21124f0, 0x21125f0, 0x21124f0, 0x21127f0, 0x21145d0, 0x21129f0, 0x21146d0, 0x21147d0, 0x21146d0, 0x21148d0, 0x21146d0, 0x21149d0, 0x21144d0:1 [ORD=2]

      0x2114ad0: <multiple use>
      0x21122f0: <multiple use>
      0x2114ad0: <multiple use>
    0x2114bd0: i64,ch,glue = CopyFromReg 0x2114ad0, 0x21122f0, 0x2114ad0:1 [ORD=2]

    0x21122f0: <multiple use>
    0x2114cd0: i64 = Constant<0>

  0x2114ed0: ch,glue = CopyToReg 0x2114bd0:1, 0x21122f0, 0x2114cd0 [ORD=3]

    0x2114ed0: <multiple use>
    0x2114dd0: i16 = TargetConstant<0>

    0x21122f0: <multiple use>
    0x2114ed0: <multiple use>
  0x2114fd0: ch = Cse523ISD::RET_FLAG 0x2114ed0, 0x2114dd0, 0x21122f0, 0x2114ed0:1 [ORD=3]


Optimized lowered selection DAG: BB#0 'main:entry'
SelectionDAG has 28 nodes:
  0x2111bf0: i64 = Constant<1>

  0x21122f0: i64 = Register %RAX

    0x20eaf10: ch = EntryToken

    0x21122f0: <multiple use>
    0x2111bf0: <multiple use>
  0x21123f0: ch,glue = CopyToReg 0x20eaf10, 0x21122f0, 0x2111bf0 [ORD=2]

  0x21124f0: i32 = TargetConstant<9>

  0x21125f0: i64 = Register %RDI

    0x21123f0: <multiple use>
    0x21125f0: <multiple use>
    0x2111bf0: <multiple use>
    0x21123f0: <multiple use>
  0x21126f0: ch,glue = CopyToReg 0x21123f0, 0x21125f0, 0x2111bf0, 0x21123f0:1 [ORD=2]

  0x21127f0: i64 = Register %RSI

    0x21126f0: <multiple use>
    0x21127f0: <multiple use>
    0x2111cf0: i64 = GlobalAddress<[14 x i8]* @.str> 0 [ORD=2]

    0x21126f0: <multiple use>
  0x21128f0: ch,glue = CopyToReg 0x21126f0, 0x21127f0, 0x2111cf0, 0x21126f0:1 [ORD=2]

  0x21129f0: i64 = Register %vreg0

    0x21128f0: <multiple use>
    0x21129f0: <multiple use>
    0x2111df0: i64 = Constant<13>

    0x21128f0: <multiple use>
  0x21144d0: ch,glue = CopyToReg 0x21128f0, 0x21129f0, 0x2111df0, 0x21128f0:1 [ORD=2]

  0x21146d0: i32 = TargetConstant<12>

    0x21144d0: <multiple use>
    0x2111ef0: i64 = TargetExternalSymbol'syscall'

    0x2111ff0: ch = MDNode<0x20d1d20>

    0x21120f0: i64 = TargetConstant<25>

    0x21121f0: i32 = TargetConstant<10>

    0x21122f0: <multiple use>
    0x21124f0: <multiple use>
    0x21122f0: <multiple use>
    0x21124f0: <multiple use>
    0x21125f0: <multiple use>
    0x21124f0: <multiple use>
    0x21127f0: <multiple use>
    0x21145d0: i32 = TargetConstant<196617>

    0x21129f0: <multiple use>
    0x21146d0: <multiple use>
    0x21147d0: i64 = Register %RCX

    0x21146d0: <multiple use>
    0x21148d0: i64 = Register %R11

    0x21146d0: <multiple use>
    0x21149d0: i64 = Register %EFLAGS

    0x21144d0: <multiple use>
  0x2114ad0: ch,glue = inlineasm 0x21144d0, 0x2111ef0, 0x2111ff0, 0x21120f0, 0x21121f0, 0x21122f0, 0x21124f0, 0x21122f0, 0x21124f0, 0x21125f0, 0x21124f0, 0x21127f0, 0x21145d0, 0x21129f0, 0x21146d0, 0x21147d0, 0x21146d0, 0x21148d0, 0x21146d0, 0x21149d0, 0x21144d0:1 [ORD=2]

      0x2114ad0: <multiple use>
      0x21122f0: <multiple use>
      0x2114ad0: <multiple use>
    0x2114bd0: i64,ch,glue = CopyFromReg 0x2114ad0, 0x21122f0, 0x2114ad0:1 [ORD=2]

    0x21122f0: <multiple use>
    0x2114cd0: i64 = Constant<0>

  0x2114ed0: ch,glue = CopyToReg 0x2114bd0:1, 0x21122f0, 0x2114cd0 [ORD=3]

    0x2114ed0: <multiple use>
    0x2114dd0: i16 = TargetConstant<0>

    0x21122f0: <multiple use>
    0x2114ed0: <multiple use>
  0x2114fd0: ch = Cse523ISD::RET_FLAG 0x2114ed0, 0x2114dd0, 0x21122f0, 0x2114ed0:1 [ORD=3]


Legally typed node: 0x2114dd0: i16 = TargetConstant<0> [ID=0]

Legally typed node: 0x2114cd0: i64 = Constant<0> [ID=0]

Legally typed node: 0x21149d0: i64 = Register %EFLAGS [ID=0]

Legally typed node: 0x21148d0: i64 = Register %R11 [ID=0]

Legally typed node: 0x21147d0: i64 = Register %RCX [ID=0]

Legally typed node: 0x21146d0: i32 = TargetConstant<12> [ID=0]

Legally typed node: 0x21145d0: i32 = TargetConstant<196617> [ID=0]

Legally typed node: 0x21129f0: i64 = Register %vreg0 [ID=0]

Legally typed node: 0x21127f0: i64 = Register %RSI [ID=0]

Legally typed node: 0x21125f0: i64 = Register %RDI [ID=0]

Legally typed node: 0x21124f0: i32 = TargetConstant<9> [ID=0]

Legally typed node: 0x21122f0: i64 = Register %RAX [ID=0]

Legally typed node: 0x21121f0: i32 = TargetConstant<10> [ID=0]

Legally typed node: 0x21120f0: i64 = TargetConstant<25> [ID=0]

Legally typed node: 0x2111ff0: ch = MDNode<0x20d1d20> [ID=0]

Legally typed node: 0x2111ef0: i64 = TargetExternalSymbol'syscall' [ID=0]

Legally typed node: 0x2111df0: i64 = Constant<13> [ID=0]

Legally typed node: 0x2111cf0: i64 = GlobalAddress<[14 x i8]* @.str> 0 [ORD=2] [ID=0]

Legally typed node: 0x2111bf0: i64 = Constant<1> [ID=0]

Legally typed node: 0x20eaf10: ch = EntryToken [ID=0]

Legally typed node: 0x21123f0: ch,glue = CopyToReg 0x20eaf10, 0x21122f0, 0x2111bf0 [ORD=2] [ID=0]

Legally typed node: 0x21126f0: ch,glue = CopyToReg 0x21123f0, 0x21125f0, 0x2111bf0, 0x21123f0:1 [ORD=2] [ID=0]

Legally typed node: 0x21128f0: ch,glue = CopyToReg 0x21126f0, 0x21127f0, 0x2111cf0, 0x21126f0:1 [ORD=2] [ID=0]

Legally typed node: 0x21144d0: ch,glue = CopyToReg 0x21128f0, 0x21129f0, 0x2111df0, 0x21128f0:1 [ORD=2] [ID=0]

Legally typed node: 0x2114ad0: ch,glue = inlineasm 0x21144d0, 0x2111ef0, 0x2111ff0, 0x21120f0, 0x21121f0, 0x21122f0, 0x21124f0, 0x21122f0, 0x21124f0, 0x21125f0, 0x21124f0, 0x21127f0, 0x21145d0, 0x21129f0, 0x21146d0, 0x21147d0, 0x21146d0, 0x21148d0, 0x21146d0, 0x21149d0, 0x21144d0:1 [ORD=2] [ID=0]

Legally typed node: 0x2114bd0: i64,ch,glue = CopyFromReg 0x2114ad0, 0x21122f0, 0x2114ad0:1 [ORD=2] [ID=0]

Legally typed node: 0x2114ed0: ch,glue = CopyToReg 0x2114bd0:1, 0x21122f0, 0x2114cd0 [ORD=3] [ID=0]

Legally typed node: 0x2114fd0: ch = Cse523ISD::RET_FLAG 0x2114ed0, 0x2114dd0, 0x21122f0, 0x2114ed0:1 [ORD=3] [ID=0]

Legally typed node: 0x7fffe4de8ba0: ch = handlenode 0x2114fd0 [ID=0]

Type-legalized selection DAG: BB#0 'main:entry'
SelectionDAG has 28 nodes:
  0x2111bf0: i64 = Constant<1> [ID=-3]

  0x21122f0: i64 = Register %RAX [ID=-3]

    0x20eaf10: ch = EntryToken [ID=-3]

    0x21122f0: <multiple use>
    0x2111bf0: <multiple use>
  0x21123f0: ch,glue = CopyToReg 0x20eaf10, 0x21122f0, 0x2111bf0 [ORD=2] [ID=-3]

  0x21124f0: i32 = TargetConstant<9> [ID=-3]

  0x21125f0: i64 = Register %RDI [ID=-3]

    0x21123f0: <multiple use>
    0x21125f0: <multiple use>
    0x2111bf0: <multiple use>
    0x21123f0: <multiple use>
  0x21126f0: ch,glue = CopyToReg 0x21123f0, 0x21125f0, 0x2111bf0, 0x21123f0:1 [ORD=2] [ID=-3]

  0x21127f0: i64 = Register %RSI [ID=-3]

    0x21126f0: <multiple use>
    0x21127f0: <multiple use>
    0x2111cf0: i64 = GlobalAddress<[14 x i8]* @.str> 0 [ORD=2] [ID=-3]

    0x21126f0: <multiple use>
  0x21128f0: ch,glue = CopyToReg 0x21126f0, 0x21127f0, 0x2111cf0, 0x21126f0:1 [ORD=2] [ID=-3]

  0x21129f0: i64 = Register %vreg0 [ID=-3]

    0x21128f0: <multiple use>
    0x21129f0: <multiple use>
    0x2111df0: i64 = Constant<13> [ID=-3]

    0x21128f0: <multiple use>
  0x21144d0: ch,glue = CopyToReg 0x21128f0, 0x21129f0, 0x2111df0, 0x21128f0:1 [ORD=2] [ID=-3]

  0x21146d0: i32 = TargetConstant<12> [ID=-3]

    0x21144d0: <multiple use>
    0x2111ef0: i64 = TargetExternalSymbol'syscall' [ID=-3]

    0x2111ff0: ch = MDNode<0x20d1d20> [ID=-3]

    0x21120f0: i64 = TargetConstant<25> [ID=-3]

    0x21121f0: i32 = TargetConstant<10> [ID=-3]

    0x21122f0: <multiple use>
    0x21124f0: <multiple use>
    0x21122f0: <multiple use>
    0x21124f0: <multiple use>
    0x21125f0: <multiple use>
    0x21124f0: <multiple use>
    0x21127f0: <multiple use>
    0x21145d0: i32 = TargetConstant<196617> [ID=-3]

    0x21129f0: <multiple use>
    0x21146d0: <multiple use>
    0x21147d0: i64 = Register %RCX [ID=-3]

    0x21146d0: <multiple use>
    0x21148d0: i64 = Register %R11 [ID=-3]

    0x21146d0: <multiple use>
    0x21149d0: i64 = Register %EFLAGS [ID=-3]

    0x21144d0: <multiple use>
  0x2114ad0: ch,glue = inlineasm 0x21144d0, 0x2111ef0, 0x2111ff0, 0x21120f0, 0x21121f0, 0x21122f0, 0x21124f0, 0x21122f0, 0x21124f0, 0x21125f0, 0x21124f0, 0x21127f0, 0x21145d0, 0x21129f0, 0x21146d0, 0x21147d0, 0x21146d0, 0x21148d0, 0x21146d0, 0x21149d0, 0x21144d0:1 [ORD=2] [ID=-3]

      0x2114ad0: <multiple use>
      0x21122f0: <multiple use>
      0x2114ad0: <multiple use>
    0x2114bd0: i64,ch,glue = CopyFromReg 0x2114ad0, 0x21122f0, 0x2114ad0:1 [ORD=2] [ID=-3]

    0x21122f0: <multiple use>
    0x2114cd0: i64 = Constant<0> [ID=-3]

  0x2114ed0: ch,glue = CopyToReg 0x2114bd0:1, 0x21122f0, 0x2114cd0 [ORD=3] [ID=-3]

    0x2114ed0: <multiple use>
    0x2114dd0: i16 = TargetConstant<0> [ID=-3]

    0x21122f0: <multiple use>
    0x2114ed0: <multiple use>
  0x2114fd0: ch = Cse523ISD::RET_FLAG 0x2114ed0, 0x2114dd0, 0x21122f0, 0x2114ed0:1 [ORD=3] [ID=-3]


Legalized selection DAG: BB#0 'main:entry'
SelectionDAG has 29 nodes:
  0x2111bf0: i64 = Constant<1> [ID=1]

  0x21122f0: i64 = Register %RAX [ID=8]

  0x21124f0: i32 = TargetConstant<9> [ID=9]

  0x21125f0: i64 = Register %RDI [ID=10]

  0x21127f0: i64 = Register %RSI [ID=11]

  0x21129f0: i64 = Register %vreg0 [ID=12]

  0x21146d0: i32 = TargetConstant<12> [ID=14]

    0x20eaf10: ch = EntryToken [ID=0]

    0x21122f0: <multiple use>
    0x2111bf0: <multiple use>
  0x21123f0: ch,glue = CopyToReg 0x20eaf10, 0x21122f0, 0x2111bf0 [ORD=2] [ID=20]

    0x21123f0: <multiple use>
    0x21125f0: <multiple use>
    0x2111bf0: <multiple use>
    0x21123f0: <multiple use>
  0x21126f0: ch,glue = CopyToReg 0x21123f0, 0x21125f0, 0x2111bf0, 0x21123f0:1 [ORD=2] [ID=21]

    0x21126f0: <multiple use>
    0x21127f0: <multiple use>
      0x21150d0: i64 = TargetGlobalAddress<[14 x i8]* @.str> 0 [ORD=2]

    0x21151d0: i64 = Cse523ISD::Wrapper 0x21150d0 [ORD=2]

    0x21126f0: <multiple use>
  0x21128f0: ch,glue = CopyToReg 0x21126f0, 0x21127f0, 0x21151d0, 0x21126f0:1 [ORD=2] [ID=22]

    0x21128f0: <multiple use>
    0x21129f0: <multiple use>
    0x2111df0: i64 = Constant<13> [ID=3]

    0x21128f0: <multiple use>
  0x21144d0: ch,glue = CopyToReg 0x21128f0, 0x21129f0, 0x2111df0, 0x21128f0:1 [ORD=2] [ID=23]

    0x21144d0: <multiple use>
    0x2111ef0: i64 = TargetExternalSymbol'syscall' [ID=4]

    0x2111ff0: ch = MDNode<0x20d1d20> [ID=5]

    0x21120f0: i64 = TargetConstant<25> [ID=6]

    0x21121f0: i32 = TargetConstant<10> [ID=7]

    0x21122f0: <multiple use>
    0x21124f0: <multiple use>
    0x21122f0: <multiple use>
    0x21124f0: <multiple use>
    0x21125f0: <multiple use>
    0x21124f0: <multiple use>
    0x21127f0: <multiple use>
    0x21145d0: i32 = TargetConstant<196617> [ID=13]

    0x21129f0: <multiple use>
    0x21146d0: <multiple use>
    0x21147d0: i64 = Register %RCX [ID=15]

    0x21146d0: <multiple use>
    0x21148d0: i64 = Register %R11 [ID=16]

    0x21146d0: <multiple use>
    0x21149d0: i64 = Register %EFLAGS [ID=17]

    0x21144d0: <multiple use>
  0x2114ad0: ch,glue = inlineasm 0x21144d0, 0x2111ef0, 0x2111ff0, 0x21120f0, 0x21121f0, 0x21122f0, 0x21124f0, 0x21122f0, 0x21124f0, 0x21125f0, 0x21124f0, 0x21127f0, 0x21145d0, 0x21129f0, 0x21146d0, 0x21147d0, 0x21146d0, 0x21148d0, 0x21146d0, 0x21149d0, 0x21144d0:1 [ORD=2] [ID=24]

      0x2114ad0: <multiple use>
      0x21122f0: <multiple use>
      0x2114ad0: <multiple use>
    0x2114bd0: i64,ch,glue = CopyFromReg 0x2114ad0, 0x21122f0, 0x2114ad0:1 [ORD=2] [ID=25]

    0x21122f0: <multiple use>
    0x2114cd0: i64 = Constant<0> [ID=18]

  0x2114ed0: ch,glue = CopyToReg 0x2114bd0:1, 0x21122f0, 0x2114cd0 [ORD=3] [ID=26]

    0x2114ed0: <multiple use>
    0x2114dd0: i16 = TargetConstant<0> [ID=19]

    0x21122f0: <multiple use>
    0x2114ed0: <multiple use>
  0x2114fd0: ch = Cse523ISD::RET_FLAG 0x2114ed0, 0x2114dd0, 0x21122f0, 0x2114ed0:1 [ORD=3] [ID=27]


Optimized legalized selection DAG: BB#0 'main:entry'
SelectionDAG has 29 nodes:
  0x2111bf0: i64 = Constant<1> [ID=1]

  0x21122f0: i64 = Register %RAX [ID=8]

  0x21124f0: i32 = TargetConstant<9> [ID=9]

  0x21125f0: i64 = Register %RDI [ID=10]

  0x21127f0: i64 = Register %RSI [ID=11]

  0x21129f0: i64 = Register %vreg0 [ID=12]

  0x21146d0: i32 = TargetConstant<12> [ID=14]

    0x20eaf10: ch = EntryToken [ID=0]

    0x21122f0: <multiple use>
    0x2111bf0: <multiple use>
  0x21123f0: ch,glue = CopyToReg 0x20eaf10, 0x21122f0, 0x2111bf0 [ORD=2] [ID=20]

    0x21123f0: <multiple use>
    0x21125f0: <multiple use>
    0x2111bf0: <multiple use>
    0x21123f0: <multiple use>
  0x21126f0: ch,glue = CopyToReg 0x21123f0, 0x21125f0, 0x2111bf0, 0x21123f0:1 [ORD=2] [ID=21]

    0x21126f0: <multiple use>
    0x21127f0: <multiple use>
      0x21150d0: i64 = TargetGlobalAddress<[14 x i8]* @.str> 0 [ORD=2]

    0x21151d0: i64 = Cse523ISD::Wrapper 0x21150d0 [ORD=2]

    0x21126f0: <multiple use>
  0x21128f0: ch,glue = CopyToReg 0x21126f0, 0x21127f0, 0x21151d0, 0x21126f0:1 [ORD=2] [ID=22]

    0x21128f0: <multiple use>
    0x21129f0: <multiple use>
    0x2111df0: i64 = Constant<13> [ID=3]

    0x21128f0: <multiple use>
  0x21144d0: ch,glue = CopyToReg 0x21128f0, 0x21129f0, 0x2111df0, 0x21128f0:1 [ORD=2] [ID=23]

    0x21144d0: <multiple use>
    0x2111ef0: i64 = TargetExternalSymbol'syscall' [ID=4]

    0x2111ff0: ch = MDNode<0x20d1d20> [ID=5]

    0x21120f0: i64 = TargetConstant<25> [ID=6]

    0x21121f0: i32 = TargetConstant<10> [ID=7]

    0x21122f0: <multiple use>
    0x21124f0: <multiple use>
    0x21122f0: <multiple use>
    0x21124f0: <multiple use>
    0x21125f0: <multiple use>
    0x21124f0: <multiple use>
    0x21127f0: <multiple use>
    0x21145d0: i32 = TargetConstant<196617> [ID=13]

    0x21129f0: <multiple use>
    0x21146d0: <multiple use>
    0x21147d0: i64 = Register %RCX [ID=15]

    0x21146d0: <multiple use>
    0x21148d0: i64 = Register %R11 [ID=16]

    0x21146d0: <multiple use>
    0x21149d0: i64 = Register %EFLAGS [ID=17]

    0x21144d0: <multiple use>
  0x2114ad0: ch,glue = inlineasm 0x21144d0, 0x2111ef0, 0x2111ff0, 0x21120f0, 0x21121f0, 0x21122f0, 0x21124f0, 0x21122f0, 0x21124f0, 0x21125f0, 0x21124f0, 0x21127f0, 0x21145d0, 0x21129f0, 0x21146d0, 0x21147d0, 0x21146d0, 0x21148d0, 0x21146d0, 0x21149d0, 0x21144d0:1 [ORD=2] [ID=24]

      0x2114ad0: <multiple use>
      0x21122f0: <multiple use>
      0x2114ad0: <multiple use>
    0x2114bd0: i64,ch,glue = CopyFromReg 0x2114ad0, 0x21122f0, 0x2114ad0:1 [ORD=2] [ID=25]

    0x21122f0: <multiple use>
    0x2114cd0: i64 = Constant<0> [ID=18]

  0x2114ed0: ch,glue = CopyToReg 0x2114bd0:1, 0x21122f0, 0x2114cd0 [ORD=3] [ID=26]

    0x2114ed0: <multiple use>
    0x2114dd0: i16 = TargetConstant<0> [ID=19]

    0x21122f0: <multiple use>
    0x2114ed0: <multiple use>
  0x2114fd0: ch = Cse523ISD::RET_FLAG 0x2114ed0, 0x2114dd0, 0x21122f0, 0x2114ed0:1 [ORD=3] [ID=27]


===== Instruction selection begins: BB#0 'entry'
Selecting:Opcode[211] 0x2114fd0: ch = Cse523ISD::RET_FLAG 0x2114ed0, 0x2114dd0, 0x21122f0, 0x2114ed0:1 [ORD=3] [ID=28]

ISEL: Starting pattern match on root node: 0x2114fd0: ch = Cse523ISD::RET_FLAG 0x2114ed0, 0x2114dd0, 0x21122f0, 0x2114ed0:1 [ORD=3] [ID=28]

  Morphed node: 0x2114fd0: ch = RETQ 0x21122f0, 0x2114ed0, 0x2114ed0:1 [ORD=3]

ISEL: Match complete!
=> 0x2114fd0: ch = RETQ 0x21122f0, 0x2114ed0, 0x2114ed0:1 [ORD=3]

Selecting:Opcode[39] 0x2114ed0: ch,glue = CopyToReg 0x2114bd0:1, 0x21122f0, 0x2114cd0 [ORD=3] [ID=27]

=> 0x2114ed0: ch,glue = CopyToReg 0x2114bd0:1, 0x21122f0, 0x2114cd0 [ORD=3]

Selecting:Opcode[40] 0x2114bd0: i64,ch,glue = CopyFromReg 0x2114ad0, 0x21122f0, 0x2114ad0:1 [ORD=2] [ID=26]

=> 0x2114bd0: i64,ch,glue = CopyFromReg 0x2114ad0, 0x21122f0, 0x2114ad0:1 [ORD=2]

Selecting:Opcode[151] 0x2114ad0: ch,glue = inlineasm 0x21144d0, 0x2111ef0, 0x2111ff0, 0x21120f0, 0x21121f0, 0x21122f0, 0x21124f0, 0x21122f0, 0x21124f0, 0x21125f0, 0x21124f0, 0x21127f0, 0x21145d0, 0x21129f0, 0x21146d0, 0x21147d0, 0x21146d0, 0x21148d0, 0x21146d0, 0x21149d0, 0x21144d0:1 [ORD=2] [ID=25]

=> 0x2114dd0: ch,glue = inlineasm 0x21144d0, 0x2111ef0, 0x2111ff0, 0x21120f0, 0x21121f0, 0x21122f0, 0x21124f0, 0x21122f0, 0x21124f0, 0x21125f0, 0x21124f0, 0x21127f0, 0x21145d0, 0x21129f0, 0x21146d0, 0x21147d0, 0x21146d0, 0x21148d0, 0x21146d0, 0x21149d0, 0x21144d0:1 [ORD=2]

Selecting:Opcode[39] 0x21144d0: ch,glue = CopyToReg 0x21128f0, 0x21129f0, 0x2111df0, 0x21128f0:1 [ORD=2] [ID=24]

=> 0x21144d0: ch,glue = CopyToReg 0x21128f0, 0x21129f0, 0x2111df0, 0x21128f0:1 [ORD=2]

Selecting:Opcode[39] 0x21128f0: ch,glue = CopyToReg 0x21126f0, 0x21127f0, 0x21151d0, 0x21126f0:1 [ORD=2] [ID=23]

=> 0x21128f0: ch,glue = CopyToReg 0x21126f0, 0x21127f0, 0x21151d0, 0x21126f0:1 [ORD=2]

Selecting:Opcode[39] 0x21126f0: ch,glue = CopyToReg 0x21123f0, 0x21125f0, 0x2111bf0, 0x21123f0:1 [ORD=2] [ID=22]

=> 0x21126f0: ch,glue = CopyToReg 0x21123f0, 0x21125f0, 0x2111bf0, 0x21123f0:1 [ORD=2]

Selecting:Opcode[215] 0x21151d0: i64 = Cse523ISD::Wrapper 0x21150d0 [ORD=2] [ID=21]

ISEL: Starting pattern match on root node: 0x21151d0: i64 = Cse523ISD::Wrapper 0x21150d0 [ORD=2] [ID=21]

  Initial Opcode index to 5771
  OpcodeSwitch from 5774 to 5838
  Skipped scope entry (due to false predicate) at index 5843, continuing at 5853
  Skipped scope entry (due to false predicate) at index 5854, continuing at 5864
  Match failed at index 5841
LLVM ERROR: Cannot select: 0x21151d0: i64 = Cse523ISD::Wrapper 0x21150d0 [ORD=2] [ID=21]
  0x21150d0: i64 = TargetGlobalAddress<[14 x i8]* @.str> 0 [ORD=2] [ID=19]
In function: main
